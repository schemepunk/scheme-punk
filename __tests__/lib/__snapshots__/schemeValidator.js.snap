// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActiveSchemeSource Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`ConcatIntoDestination Basic concatIntoDestination schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`ContingentSource Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "contingencies": Object {
      "defined": Array [
        Object {
          "path": "type",
          "type": "static",
          "value": "staticTestDefined",
        },
      ],
      "testValue1": Array [
        Object {
          "path": "newTest",
          "target": "testValue1",
          "type": "dynamic",
        },
        Object {
          "path": "type",
          "type": "static",
          "value": "staticTest",
        },
        Object {
          "holdover": Object {
            "type": "static",
            "value": "test2",
          },
          "path": "holdOverTest",
          "type": "holdOver",
        },
      ],
      "undefined": Array [
        Object {
          "path": "type",
          "type": "static",
          "value": "staticTestUndefined",
        },
      ],
    },
    "plugin": "contingentSource",
    "reducer": "newTest",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`ContingentSource Validation Basic schemePunk validation 2`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "contingencies": Object {
      "defined": Array [
        Object {
          "path": "type",
          "type": "static",
          "value": "staticTestDefined",
        },
      ],
      "undefined": Array [
        Object {
          "path": "type",
          "type": "static",
          "value": "staticTestUndefined",
        },
      ],
    },
    "plugin": "contingentSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`Destroy Destination Basic destroyDestination schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "destroyDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`Merge into Destination Basic merge into destination 1`] = `
Object {
  "destination": Object {
    "plugin": "mergeIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`OriginalSchemeSource Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`Push Destination Basic Push Destination 1`] = `
Object {
  "destination": Object {
    "plugin": "pushDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`Scheme Runner Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`Scheme Runner Validation Basic schemePunk validation just mapping. 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "originalSchemeSource",
    "target": "test",
  },
  "transform": Object {},
}
`;

exports[`Scheme Runner Validation Basic schemeRunner validation 1`] = `
Object {
  "arbitraryNameForThisScheme": Array [
    Array [
      Object {
        "destination": Object {
          "target": "test",
        },
        "source": Object {
          "plugin": "originalSchemeSource",
          "target": "test",
        },
        "transform": Object {
          "plugin": "prependValuesAdapter",
          "sourcePrepend": "+",
        },
      },
    ],
    Array [
      Object {
        "destination": Object {
          "plugin": "concatIntoDestination",
          "target": "test",
        },
        "source": Object {
          "plugin": "activeSchemeSource",
          "target": "test",
        },
        "transform": Object {
          "plugin": "appendValuesAdapter",
          "sourceAppend": "-",
        },
      },
    ],
  ],
}
`;

exports[`Source From constant Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "constant": "test",
    "plugin": "sourceFromConstant",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`appendValues Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "appendValuesAdapter",
    "sourceAppend": "-",
  },
}
`;

exports[`delimit Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "delimitValues",
    "sourceDelimiter": "-",
  },
}
`;

exports[`filterAttributes Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "filterBias": "out",
    "filterItems": Array [
      "item1",
      "item2",
    ],
    "plugin": "filterAttribute",
  },
}
`;

exports[`filterAttributes filterAttributeMulti Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "filterBias": "out",
    "filterItems": Array [
      "item1",
      "item2",
    ],
    "plugin": "filterAttributeMulti",
  },
}
`;

exports[`filterObject Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "filterBias": "out",
    "filterItems": Array [
      "things",
      "things1",
    ],
    "plugin": "filterObject",
  },
}
`;

exports[`filterObjectMulti Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "filterBias": "out",
    "filterItems": Array [
      "things",
      "things1",
    ],
    "plugin": "filterObjectMulti",
  },
}
`;

exports[`prependValues Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "plugin": "prependValuesAdapter",
    "sourcePrepend": "-",
  },
}
`;

exports[`tokenTemplates Validation Basic schemePunk validation 1`] = `
Object {
  "destination": Object {
    "plugin": "concatIntoDestination",
    "target": "test",
  },
  "source": Object {
    "plugin": "activeSchemeSource",
    "target": "test",
  },
  "transform": Object {
    "json": true,
    "named": true,
    "plugin": "tokenTemplateValues",
    "template": Object {
      "filterPartials": Array [
        "this1",
        "this2",
      ],
      "targetPartial": "this",
    },
    "tokens": Array [
      "item",
    ],
    "unescape": true,
  },
}
`;
